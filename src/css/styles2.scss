// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here

$white:    hsl(51, 44%, 94%);
$gray-100: #f8f9fa;
$gray-200: #e9ecef;
$gray-300: #dee2e6;
$gray-400: #ced4da;
$gray-500: #adb5bd;
$gray-600: #6c757d;
$gray-700: #495057;
$gray-800: #343a40;
$gray-900: #212529;
$black:    #000;

$body-bg: hsl(51, 44%, 94%);
$bg-light:hsl(51, 44%, 94%);
$bg-light-rgb:rgb(246, 244, 233);
$body-color: #111;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../../node_modules/bootstrap/scss/variables";
@import "../../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "../../node_modules/bootstrap/scss/maps";
@import "../../node_modules/bootstrap/scss/mixins";
@import "../../node_modules/bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../../node_modules/bootstrap/scss/utilities";
@import "../../node_modules/bootstrap/scss/reboot";
@import "../../node_modules/bootstrap/scss/type";
@import "../../node_modules/bootstrap/scss/images";
@import "../../node_modules/bootstrap/scss/containers";
@import "../../node_modules/bootstrap/scss/grid";
@import "../../node_modules/bootstrap/scss/helpers";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here



$custom-colors: (
        "custom-red": #900,
        "danger":hsl(0, 81%, 35%),
        "brand-organge":hsl(25, 50%, 50%),
        "brand-brown":hsl(25, 75%, 10%),
        "brand-green":hsl(175, 25%, 50%),
        "brand-dark":hsl(175, 25%, 25%),
        "brand-cream":hsl(51, 44%, 94%),
        "primary":hsl(175, 25%, 50%),
        "light":hsl(51, 44%, 94%),

);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);



@import "../../node_modules/open-props/normalize.min.css";


root {
  --bs-light: hsl(51, 44%, 94%);
  --bs-light-rgb:rgb(246, 244, 233) !important;
}

.bg-light{
  background-color:rgb(246, 244, 233) !important;
}



@mixin gradient-text($gradient, $bg : 'light') {
  @supports(mix-blend-mode: lighten) {
    display: inline-block;
    position: relative;

    &::before {
      content: '';
      display: block;
      position: absolute;
      top: 0; right: 0; bottom: 0; left: 0;

      background: unquote($gradient);
      pointer-events: none;
    }

    @if ($bg == 'light') {
      color: #000;
      background: rgb(246, 244, 233);
      mix-blend-mode: multiply;

      &::before {
        mix-blend-mode: screen;
      }
    } @else {
      color: rgb(246, 244, 233);
      background: #000;
      mix-blend-mode: lighten;

      &::before {
        mix-blend-mode: multiply;
      }
    }
  }
}

.gradient-container.light {
  background: rgb(246, 244, 233);

  .gradient1 {
    @include gradient-text('linear-gradient(to right,#23966c, #faaa54, #e23b4a, #db0768, #360670)', 'light');
  }

  .gradient2 {
    @include gradient-text('radial-gradient(circle, #23966c, #faaa54, #e23b4a, #db0768, #360670)', 'light');
  }
}

.gradient-container.dark {
  background: #222;

  .gradient1 {
    color: #fff; // Fallback color

    @include gradient-text('linear-gradient(to right,#23966c, #faaa54, #e23b4a, #db0768, #360670)', 'dark');
  }

  .gradient2 {
    color: #fff;

    @include gradient-text('radial-gradient(circle, #23966c, #faaa54, #e23b4a, #db0768, #360670)', 'dark');
  }
}

/* Page styling, ignore */
//body {
//  margin: 0;
//  font-family: "Lato", sans-serif;
//  text-align: center;
//}

//section {
//  min-height: 50vh;
//  padding: 2em;
//}

.gradient1 {
  font-size: 96px;
  margin: 0.5em;
  opacity: 0.9;
}

.gradient2 {
  text-align: center;
  margin: 1em auto;
  width: 10em;
}